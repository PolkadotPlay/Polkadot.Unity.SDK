<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Substrate.NetApi</name>
    </assembly>
    <members>
        <member name="T:Substrate.NetApi.Attributes.SubstrateNodeTypeAttribute">
            <summary>
            Substrate Node Type Attribute
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Attributes.SubstrateNodeTypeAttribute.NodeType">
            <summary>
            Node Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Attributes.SubstrateNodeTypeAttribute.#ctor(Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum)">
            <summary>
            Substrate Node Type Attribute
            </summary>
            <param name="nodeType"></param>
        </member>
        <member name="T:Substrate.NetApi.Base58Local">
            <summary>
            Base58 Functions
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Base58Local.AlphaNumerics">
            <summary>
            The alphabet used in the Base58 encoding.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Base58Local.CheckSumSizeInBytes">
            <summary>
            The size of a Base58 check sum in bytes.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.AddCheckSum(System.Byte[])">
            <summary>
            Adds a check sum to the given data.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.VerifyAndRemoveCheckSum(System.Byte[])">
            <summary>
            Verifies the check sum of the given data and removes the check sum bytes.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.Encode(System.Byte[])">
            <summary>
            Encodes the given data bytes as a Base58 string.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.EncodeWithCheckSum(System.Byte[])">
            <summary>
            Encodes the given data bytes as a Base58 string with a check sum.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.Decode(System.String)">
            <summary>
            Decodes the given Base58 string into the original data bytes.
            </summary>
            <param name="str"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.DecodeWithCheckSum(System.String)">
            <summary>
            Decodes the given Base58 string with a check sum into the original data bytes.
            </summary>
            <param name="str"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Base58Local.GetCheckSum(System.Byte[])">
            <summary>
            Get Check Sum
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Substrate.NetApi.BIP39.ChineseSimplified">
            <summary>
            Chinese Simplified Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.ChineseSimplified.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.ChineseSimplified.#ctor">
            <summary>
            Chinese Simplified Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.ChineseTraditional">
            <summary>
            Chinese Traditional Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.ChineseTraditional.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.ChineseTraditional.#ctor">
            <summary>
            Chinese Traditional Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Korean">
            <summary>
            Korean Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Korean.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Korean.#ctor">
            <summary>
            Korean Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.English">
            <summary>
            English Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.English.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.English.#ctor">
            <summary>
            English Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.French">
            <summary>
            French Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.French.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.French.#ctor">
            <summary>
            French Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Japanese">
            <summary>
            Japanese Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Japanese.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Japanese.#ctor">
            <summary>
            Japanese Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Spanish">
            <summary>
            Spanish Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Spanish.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Spanish.#ctor">
            <summary>
            Spanish Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Portuguese">
            <summary>
            Portuguese Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Portuguese.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Portuguese.#ctor">
            <summary>
            Portuguese Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Czech">
            <summary>
            Czech Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Czech.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Czech.#ctor">
            <summary>
            Czech Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Italian">
            <summary>
            Italian Words
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Italian.words">
            <summary>
            Words
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Italian.#ctor">
            <summary>
            Italian Constructor
            </summary>
        </member>
        <member name="T:Substrate.NetApi.BIP39.Wordlist">
            <summary>
            Base class for all wordlists
            </summary>
        </member>
        <member name="F:Substrate.NetApi.BIP39.Wordlist._words">
            <summary>
            The words in the wordlist
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Wordlist.#ctor(System.String[])">
            <summary>
            Constructor used by inheritence only
            </summary>
            <param name="words">The words to be used in the wordlist</param>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Wordlist.WordExists(System.String,System.Int32@)">
            <summary>
            Method to determine if word exists in word list, great for auto language detection
            </summary>
            <param name="word">The word to check for existence</param>
            <param name="index"></param>
            <returns>Exists (true/false)</returns>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Wordlist.GetWordAtIndex(System.Int32)">
            <summary>
            Returns a string containing the word at the specified index of the wordlist
            </summary>
            <param name="index">Index of word to return</param>
            <returns>Word</returns>
        </member>
        <member name="P:Substrate.NetApi.BIP39.Wordlist.WordCount">
            <summary>
            The number of all the words in the wordlist
            </summary>
        </member>
        <member name="M:Substrate.NetApi.BIP39.Wordlist.GetWords">
            <summary>
            Returns all the words in the wordlist
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.CompactInteger">
            <summary> A compact integer. </summary>
            <remarks> 19.09.2020. </remarks>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(System.Numerics.BigInteger)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I8)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I16)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I32)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I64)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I128)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.I256)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U8)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U16)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U32)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U64)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U128)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.#ctor(Substrate.NetApi.Model.Types.Primitive.U256)">
            <summary>
            Value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.Equals(System.Object)">
            <summary> Indicates whether this instance and a specified object are equal. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="obj"> The object to compare with the current instance. </param>
            <returns>
                true if <paramref name="obj">obj</paramref> and this instance are the same type and represent
                the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.GetHashCode">
            <summary> Returns the hash code for this instance. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> A 32-bit signed integer that is the hash code for this instance. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.ToString">
            <summary> Returns the fully qualified type name of this instance. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> The fully qualified type name. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Division(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Division operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The numerator. </param>
            <param name="value"> The denominator. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Subtraction(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Subtraction operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first value. </param>
            <param name="value"> A value to subtract from it. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Addition(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Addition operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first value. </param>
            <param name="value"> A value to add to it. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Multiply(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Multiplication operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first value to multiply. </param>
            <param name="value"> The second value to multiply. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_LessThan(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Less-than comparison operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_GreaterThan(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Greater-than comparison operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_LessThanOrEqual(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Less-than-or-equal comparison operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_GreaterThanOrEqual(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Greater-than-or-equal comparison operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_LeftShift(Substrate.NetApi.CompactInteger,System.Int32)">
            <summary> . </summary>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_RightShift(Substrate.NetApi.CompactInteger,System.Int32)">
            <summary> Bitwise right shift operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The class instance that this method operates on. </param>
            <param name="value"> The value. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_BitwiseAnd(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Bitwise 'and' operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  A bit-field to process. </param>
            <param name="value"> A mask of bits to apply to the bit-field. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_BitwiseOr(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Bitwise 'or' operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  A bit-field to process. </param>
            <param name="value"> One or more bits to OR into the bit-field. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Equality(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Equality operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Inequality(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary> Inequality operator. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="self">  The first instance to compare. </param>
            <param name="value"> The second instance to compare. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Explicit(Substrate.NetApi.CompactInteger)~System.Numerics.BigInteger">
            <summary> Explicit cast that converts the given CompactInteger to a BigInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.SByte">
            <summary> Implicit cast that converts the given CompactInteger to a sbyte. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.Byte">
            <summary> Implicit cast that converts the given CompactInteger to a byte. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.Int16">
            <summary> Implicit cast that converts the given CompactInteger to a short. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.UInt16">
            <summary> Implicit cast that converts the given CompactInteger to an ushort. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.Int32">
            <summary> Implicit cast that converts the given CompactInteger to an int. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.UInt32">
            <summary> Implicit cast that converts the given CompactInteger to an uint. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.Int64">
            <summary> Implicit cast that converts the given CompactInteger to a long. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(Substrate.NetApi.CompactInteger)~System.UInt64">
            <summary> Implicit cast that converts the given CompactInteger to an ulong. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="c"> A CompactInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.Numerics.BigInteger)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given BigInteger to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="b"> A BigInteger to process. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.SByte)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given sbyte to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.Byte)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given byte to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.Int16)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given short to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.UInt16)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given ushort to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.Int32)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given int to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.UInt32)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given uint to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.Int64)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given long to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.op_Implicit(System.UInt64)~Substrate.NetApi.CompactInteger">
            <summary> Implicit cast that converts the given ulong to a CompactInteger. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="i"> Zero-based index of the. </param>
            <returns> The result of the operation. </returns>
        </member>
        <member name="P:Substrate.NetApi.CompactInteger.Value">
            <summary> Gets the value. </summary>
            <value> The value. </value>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.Decode(System.Byte[])">
            <summary> Decodes. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="m"> A byte[] to process. </param>
            <returns> A CompactInteger. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.Decode(System.Byte[],System.Int32@)">
            <summary> Decodes. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="m"> A byte[] to process. </param>
            <param name="p"> [in,out] an int to process. </param>
            <returns> A CompactInteger. </returns>
        </member>
        <member name="M:Substrate.NetApi.CompactInteger.Encode">
            <summary> Gets the encode. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> A byte[]. </returns>
        </member>
        <member name="T:Substrate.NetApi.Constants">
            <summary>
            Constants
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Constants.ExtrinsicEraPeriodDefault">
            <summary>
            The default era period
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Constants.ExtrinsicVersion">
            <summary>The extrinsic version</summary>
        </member>
        <member name="F:Substrate.NetApi.Constants.AddressVersion">
            <summary>
            The address version
             https://polkadot.js.org/docs/api/FAQ/
             0 = AccountId (no prefix), 1 = IndicesLookup (0xFF), 2 = MutiAddress (https://github.com/paritytech/substrate/pull/7380)
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Exceptions.ClientNotConnectedException">
            <summary>
            Client Not Connected Exception
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Exceptions.ClientNotConnectedException.#ctor(System.String)">
            <summary>
            Client Not Connected Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Substrate.NetApi.Exceptions.ConverterAlreadyRegisteredException">
            <summary>
            Converter Already Registered Exception
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Exceptions.ConverterAlreadyRegisteredException.#ctor(System.String)">
            <summary>
            Converter Already Registered Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Substrate.NetApi.Exceptions.MissingConverterException">
            <summary>
            Missing Converter Exception
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Exceptions.MissingConverterException.#ctor(System.String)">
            <summary>
            Missing Converter Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Substrate.NetApi.Exceptions.MissingModuleOrItemException">
            <summary>
            Missing Module Or Item Exception
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Exceptions.MissingModuleOrItemException.#ctor(System.String)">
            <summary>
            Missing Module Or Item Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Substrate.NetApi.Exceptions.MissingParameterException">
            <summary>
            Missing Parameter Exception
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Exceptions.MissingParameterException.#ctor(System.String)">
            <summary>
            Missing Parameter Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Substrate.NetApi.Extensions.BytesExtension">
            <summary>
            Bytes Extension
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Extensions.BytesExtension.Populate(System.Byte[])">
            <summary>
            Load a byte array with random bytes
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Extensions.BytesExtension.BytesFixLength(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Convert bytes to hex
            </summary>
            <param name="value"></param>
            <param name="bitLength"></param>
            <param name="atStart"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Extensions.StringExtension">
            <summary>
            String Extension
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Extensions.StringExtension.ToBytes(System.String)">
            <summary>
            Convert string to bytes
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Extensions.StringExtension.IsHex(System.String)">
            <summary>
            Convert string to hex
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Extensions.StringExtension.IsHexCharacters(System.String)">
            <summary>
            Convert string to hex
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Extensions.StringExtension.IsHexDigit(System.Char)">
            <summary>
            Convert string to hex
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.HashExtension">
            <summary>
            Hash extension.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Hash(Substrate.NetApi.Model.Meta.Storage.Hasher,System.Byte[])">
            <summary>
            Hash some bytes with a storage hasher.
            </summary>
            <param name="hasher">Hasher to use.</param>
            <param name="bytes">bytes to hash.</param>
            <returns>Bytes of the hash.</returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Blake2(System.Byte[],System.Int32,System.Collections.Generic.IReadOnlyList{System.Byte})">
            <summary>Blake2 hashed the specified bytes.</summary>
            <param name="bytes">The bytes.</param>
            <param name="size">The size.</param>
            <param name="key">The key.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Blake2Concat(System.Byte[],System.Int32)">
            <summary>Blake2 hashed with bytes concated at the end.</summary>
            <param name="bytes">The bytes.</param>
            <param name="size">The size.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Blake2(System.Byte[],System.Int32,System.Int32)">
            <summary>Blake2 hashed the specified ss prefixed.</summary>
            <param name="ssPrefixed">The ss prefixed.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Twox128(System.Byte[])">
            <summary>XXHash 128 bytes.</summary>
            <param name="bytes">The bytes.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Twox256(System.Byte[])">
            <summary>XXHash 256 bytes.</summary>
            <param name="bytes">The bytes.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Substrate.NetApi.HashExtension.Twox64Concat(System.Byte[])">
            <summary>XXHashed 64 hashed with bytes concated at the end.</summary>
            <param name="bytes">The bytes.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Substrate.NetApi.ITypeConverter">
            <summary> Interface for type converter. </summary>
            <remarks> 19.09.2020. </remarks>
        </member>
        <member name="P:Substrate.NetApi.ITypeConverter.TypeName">
            <summary> Gets the name of the type. </summary>
            <value> The name of the type. </value>
        </member>
        <member name="M:Substrate.NetApi.ITypeConverter.Create(System.String)">
            <summary> Creates a new object. </summary>
            <param name="value"> The value. </param>
            <returns> An object. </returns>
        </member>
        <member name="T:Substrate.NetApi.Mnemonic">
            <summary>
            Mnemonic
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Mnemonic.BIP39Wordlist">
            <summary>
            BIP39 Wordlist
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Japanese">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Korean">
            <summary>
            Korean
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.ChineseSimplified">
            <summary>
            Chinese Simplified
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.ChineseTraditional">
            <summary>
            Chinese Traditional
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.French">
            <summary>
            French
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Italian">
            <summary>
            Italian
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Czech">
            <summary>
            Czech
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.BIP39Wordlist.Portuguese">
            <summary>
            Portuguese
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.PBKDF2Sha512GetBytes(System.Int32,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Rfc2898DeriveBytes, with HMACSHA512 usable for .NETStandard 2.0
            </summary>
            <param name="dklen"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterationCount"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.SeedFromEntropy(System.Byte[],System.String)">
            <summary>
            Get seed from entropy bytes, make  sure entropy is a byte array from a correctly recovered and checksumed BIP39.
            Following slices are supported:
            + 16 bytes for 12 words.
            + 20 bytes for 15 words.
            + 24 bytes for 18 words.
            + 28 bytes for 21 words.
            + 32 bytes for 24 words.
            Other slices will lead to a InvalidEntropy error.
            https://github.com/paritytech/substrate-bip39/blob/eef2f86337d2dab075806c12948e8a098aa59d59/src/lib.rs#L45
            </summary>
            <param name="entropyBytes"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.MnemonicFromEntropy(System.Byte[],Substrate.NetApi.Mnemonic.BIP39Wordlist)">
            <summary>
            Generate a mnemonic seed phrase from a given entropy.
            16, 20, 24, 28, 32 Bytes Entropy supported.
            </summary>
            <param name="entropyBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.GetSecretKeyFromMnemonic(System.String,System.String,Substrate.NetApi.Mnemonic.BIP39Wordlist)">
            <summary>
            Get secret key from mnemonic
            </summary>
            <param name="mnemonic"></param>
            <param name="password"></param>
            <param name="bIP39Wordlist"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.GetKeyPairFromMnemonic(System.String,System.String,Substrate.NetApi.Mnemonic.BIP39Wordlist,Schnorrkel.Keys.ExpandMode)">
            <summary>
            Get a key pair from mnemonic
            </summary>
            <param name="mnemonic"></param>
            <param name="password"></param>
            <param name="bIP39Wordlist"></param>
            <param name="expandMode"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.GetAccountFromMnemonic(System.String,System.String,Substrate.NetApi.Model.Types.KeyType,Substrate.NetApi.Mnemonic.BIP39Wordlist,Schnorrkel.Keys.ExpandMode)">
            <summary>
            Get account from mnemonic
            </summary>
            <param name="mnemonic"></param>
            <param name="password"></param>
            <param name="bIP39Wordlist"></param>
            <param name="expandMode"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.MnemonicToEntropy(System.String,Substrate.NetApi.Mnemonic.BIP39Wordlist)">
            <summary>
            Get entropy from mnemonic
            </summary>
            <param name="mnemonic"></param>
            <param name="wordlistType"></param>
            <returns></returns>
            <exception cref="T:System.FormatException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Substrate.NetApi.Mnemonic.MnemonicSize">
            <summary>
            Mnemonic size
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.MnemonicSize.Words12">
            <summary>
            Words 12
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.MnemonicSize.Words15">
            <summary>
            Words 15
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.MnemonicSize.Words18">
            <summary>
            Words 18 
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.MnemonicSize.Words21">
            <summary>
            Words 21
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Mnemonic.MnemonicSize.Words24">
            <summary>
            Words 24
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.GenerateMnemonic(Substrate.NetApi.Mnemonic.MnemonicSize,Substrate.NetApi.Mnemonic.BIP39Wordlist)">
            <summary>
            Generate new mnemonic based on nb words
            </summary>
            <param name="mnemonicSize"></param>
            <param name="bIP39Wordlist"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Mnemonic.ValidateMnemonic(System.String,Substrate.NetApi.Mnemonic.BIP39Wordlist)">
            <summary>
            Validate mnemonic
            </summary>
            <param name="mnemonic"></param>
            <param name="bIP39Wordlist"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.ChargeType">
            <summary>
            Charge Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.ChargeAssetTxPayment">
            <summary>
            Charge Asset Tx Payment
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeAssetTxPayment.#ctor(Substrate.NetApi.CompactInteger,Substrate.NetApi.CompactInteger)">
            <summary>
            Charge Asset Tx Payment Constructor
            </summary>
            <param name="tip"></param>
            <param name="asset"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeAssetTxPayment.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeAssetTxPayment.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeAssetTxPayment.Default">
            <summary>
            Default
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.ChargeTransactionPayment">
            <summary>
            Charge Transaction Payment
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeTransactionPayment.#ctor(Substrate.NetApi.CompactInteger)">
            <summary>
            Charge Transaction Payment Constructor
            </summary>
            <param name="tip"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeTransactionPayment.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeTransactionPayment.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.ChargeTransactionPayment.Default">
            <summary>
            Default
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.Era">
            <summary>
            Era
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Era.IsImmortal">
            <summary>
            Is Immortal
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Era.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Era.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.EraStart(System.UInt64)">
            <summary>
            Era Start
            </summary>
            <param name="currentBlockNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.#ctor(System.UInt64,System.UInt64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Era"/> class.
            </summary>
            <param name="period">The period.</param>
            <param name="phase">The phase.</param>
            <param name="isImmortal">if set to <c>true</c> [is immortal].</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.Create(System.UInt32,System.UInt64)">
            <summary>
            Creates the specified life time.
            </summary>
            <param name="lifeTime">The life time.</param>
            <param name="finalizedHeaderBlockNumber">The finalized header block number.</param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Era.Decode(System.Byte[])">
            <summary>
            Decodes the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
            <exception cref="T:Substrate.NetApi.Model.Extrinsics.Era">
            0, 0, true
            or
            0, 0, true
            </exception>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.Extrinsic">
            <summary>
            Extrinsic
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Signed">
            <summary>
            Signed
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.TransactionVersion">
            <summary>
            Transaction Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Era">
            <summary>
            Era
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Nonce">
            <summary>
            Nonce
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Charge">
            <summary>
            Charge
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Method">
            <summary>
            Method
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Extrinsic.Signature">
            <summary>
            Signature
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Extrinsic.#ctor(System.String,Substrate.NetApi.Model.Extrinsics.ChargeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Extrinsic"/> class.
            </summary>
            <param name="str">The string.</param>
            <param name="chargeType"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Extrinsic.#ctor(System.Memory{System.Byte},Substrate.NetApi.Model.Extrinsics.ChargeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Extrinsic"/> class.
            </summary>
            <param name="memory">The memory.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Extrinsic.#ctor(System.Boolean,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.CompactInteger,Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Extrinsics.Era,Substrate.NetApi.Model.Extrinsics.ChargeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Extrinsic"/> class.
            </summary>
            <param name="signed">if set to <c>true</c> [signed].</param>
            <param name="account">The account.</param>
            <param name="nonce">The nonce.</param>
            <param name="method">The method.</param>
            <param name="era">The era.</param>
            <param name="charge"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Extrinsic.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Extrinsic.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.Method">
            <summary>
            Method
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Method.ModuleName">
            <summary>
            Module Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Method.ModuleIndex">
            <summary>
            Module Index
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Method.CallName">
            <summary>
            Call Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Method.CallIndex">
            <summary>
            Call Index
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Extrinsics.Method.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Method.#ctor(System.Byte,System.Byte,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Method"/> class.
            </summary>
            <param name="moduleIndex">Index of the module.</param>
            <param name="callIndex">Index of the call.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Method.#ctor(System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Method"/> class.
            </summary>
            <param name="moduleIndex">Index of the module.</param>
            <param name="callIndex">Index of the call.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Method.#ctor(System.Byte,System.String,System.Byte,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Method"/> class.
            </summary>
            <param name="moduleIndex">Index of the module.</param>
            <param name="moduleName">Name of the module.</param>
            <param name="callIndex">Index of the call.</param>
            <param name="callName">Name of the call.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Method.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Method.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.Payload">
            <summary>
            Payload
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Payload.#ctor(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Extrinsics.SignedExtensions)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.Payload"/> class.
            </summary>
            <param name="call">The call.</param>
            <param name="signedExtensions">The signed extensions.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.Payload.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Extrinsics.SignedExtensions">
            <summary>
            Signed Extensions
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.SignedExtensions.#ctor(System.UInt32,System.UInt32,Substrate.NetApi.Model.Types.Base.Hash,Substrate.NetApi.Model.Types.Base.Hash,Substrate.NetApi.Model.Extrinsics.Era,Substrate.NetApi.CompactInteger,Substrate.NetApi.Model.Extrinsics.ChargeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.SignedExtensions"/> class.
            </summary>
            <param name="specVersion">The spec version.</param>
            <param name="txVersion">The tx version.</param>
            <param name="genesis">The genesis.</param>
            <param name="startEra">The start era.</param>
            <param name="mortality">The mortality.</param>
            <param name="nonce">The nonce.</param>
            <param name="chargeTransactionPayment">The charge transaction payment.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.SignedExtensions.GetExtra">
            <summary>
            Gets the extra.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.SignedExtensions.GetAdditionalSigned">
            <summary>
            Gets the additional signed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.SignedExtensions.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic.#ctor(System.Boolean,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Extrinsics.Era,Substrate.NetApi.CompactInteger,Substrate.NetApi.Model.Extrinsics.ChargeType,Substrate.NetApi.Model.Types.Base.Hash,Substrate.NetApi.Model.Types.Base.Hash)">
            <summary>
            Initializes a new instance of the <see cref="T:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic"/> class.
            </summary>
            <param name="signed">if set to <c>true</c> [signed].</param>
            <param name="account">The account.</param>
            <param name="method">The method.</param>
            <param name="era">The era.</param>
            <param name="nonce">The nonce.</param>
            <param name="charge"></param>
            <param name="genesis">The genesis.</param>
            <param name="startEra">The start era.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic.GetPayload(Substrate.NetApi.Model.Rpc.RuntimeVersion)">
            <summary>
            Gets the payload.
            </summary>
            <param name="runtime">The runtime.</param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic.AddPayloadSignature(System.Byte[])">
            <summary>
            Adds the payload signature.
            </summary>
            <param name="signature">The signature.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Missing payload signature for signed transaction.</exception>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.MetaData">
            <summary>
            Meta Data
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Meta.MetaData.#ctor(Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata,System.String)">
            <summary>
            Meta Data Constructor
            </summary>
            <param name="rtmd"></param>
            <param name="origin"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.MetaData.Origin">
            <summary>
            Origin
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.MetaData.Magic">
            <summary>
            Magic
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.MetaData.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.MetaData.NodeMetadata">
            <summary>
            Node Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Meta.MetaData.Serialize">
            <summary>
            Serialize
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Meta.MetaData.CreateNodeTypeDict(Substrate.NetApi.Model.Types.Metadata.V14.PortableType[])">
            <summary>
            Create Node Type Dictionary
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Meta.MetaData.CreateModuleDict(Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata[])">
            <summary>
            Create Module Dictionary
            </summary>
            <param name="modules"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Meta.MetaData.CreateExtrinsic(Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct)">
            <summary>
            Create Extrinsic
            </summary>
            <param name="extrinsic"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeType">
            <summary>
            Node Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeType.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeType.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeType.TypeParams">
            <summary>
            Type Params
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeType.TypeDef">
            <summary>
            Type Def Enum
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeType.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeParam">
            <summary>
            Node Type Param
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeParam.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeParam.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypePrimitive">
            <summary>
            Node Type Primitive
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypePrimitive.Primitive">
            <summary>
            Primitive
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeComposite">
            <summary>
            Node Type Composite
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeComposite.TypeFields">
            <summary>
            Type Fields
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeField">
            <summary>
            Node Type Field
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeField.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeField.TypeName">
            <summary>
            Type Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeField.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeField.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeArray">
            <summary>
            Node Type Array
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeArray.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeArray.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeSequence">
            <summary>
            Node Type Sequence
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeSequence.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeCompact">
            <summary>
            Node Type Compact
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeCompact.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeTuple">
            <summary>
            Node Type Tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeTuple.TypeIds">
            <summary>
            Type Ids
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeBitSequence">
            <summary>
            Node Type Bit Sequence
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeBitSequence.TypeIdStore">
            <summary>
            Type Id Store
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeBitSequence.TypeIdOrder">
            <summary>
            Type Id Order
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeTypeVariant">
            <summary>
            Node Type Variant
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeTypeVariant.Variants">
            <summary>
            Variants
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.TypeVariant">
            <summary>
            Type Variant
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeVariant.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeVariant.TypeFields">
            <summary>
            Type Fields
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeVariant.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeVariant.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.NodeMetadataV14">
            <summary>
            Node Metadata V14
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeMetadataV14.Types">
            <summary>
            Types
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeMetadataV14.Modules">
            <summary>
            Modules
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeMetadataV14.Extrinsic">
            <summary>
            Extrinsic
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.NodeMetadataV14.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.SignedExtensionMetadata">
            <summary>
            Signed Extension Metadata
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.SignedExtensionMetadata.SignedIdentifier">
            <summary>
            Signed Identifier
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.SignedExtensionMetadata.SignedExtType">
            <summary>
            Signed Ext Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.SignedExtensionMetadata.AddSignedExtType">
            <summary>
            Add Signed Ext Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.ExtrinsicMetadata">
            <summary>
            Extrinsic Metadata
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.ExtrinsicMetadata.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.ExtrinsicMetadata.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.ExtrinsicMetadata.SignedExtensions">
            <summary>
            Signed Extensions
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletConstant">
            <summary>
            Pallet Constant
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletConstant.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletConstant.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletConstant.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletConstant.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletStorage">
            <summary>
            Pallet Storage
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletStorage.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletStorage.Entries">
            <summary>
            Entries
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.Entry">
            <summary>
            Entry
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.Modifier">
            <summary>
            Modifier
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.StorageType">
            <summary>
            Storage Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.TypeMap">
            <summary>
            Type Map
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.Entry.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.TypeMap">
            <summary>
            Type Map
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeMap.Hashers">
            <summary>
            Hashers
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeMap.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.TypeMap.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletModule">
            <summary>
            Pallet Module
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Calls">
            <summary>
            Calls
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Events">
            <summary>
            Events
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Constants">
            <summary>
            Constants
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletModule.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletCalls">
            <summary>
            Pallete Calls
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletCalls.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletEvents">
            <summary>
            Pallet Events
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletEvents.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.PalletErrors">
            <summary>
            Pallet Errors
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Meta.PalletErrors.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.Storage.Type">
            <summary>
            Storage Type Enum
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Type.Plain">
            <summary>
            Plain
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Type.Map">
            <summary>
            Map
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Type.DoubleMap">
            <summary>
            Double Map
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Type.NMap">
            <summary>
            NMap
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.Storage.Modifier">
            <summary>
            Storage Modifier Enum
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Modifier.Optional">
            <summary>
            Optional
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Modifier.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Meta.Storage.Hasher">
            <summary>
            Storage Hasher Enum
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128">
            <summary>
            Blake2 128
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo256">
            <summary>
            Blake2 256
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat">
            <summary>
            Blake2 128 Concat
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.Twox128">
            <summary>
            Twox 128
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.Twox256">
            <summary>
            Twox 256
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat">
            <summary>
            Twox 64 Concat
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Meta.Storage.Hasher.Identity">
            <summary>
            Identity
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Block">
            <summary>
            Block
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Block.Extrinsics">
            <summary>
            Extrinsics
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Block.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.BlockData">
            <summary>
            Block Data
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.BlockData.#ctor(Substrate.NetApi.Model.Rpc.Block,System.Object)">
            <summary>
            Block Data Constructor
            </summary>
            <param name="block"></param>
            <param name="justification"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.BlockData.Block">
            <summary>
            Block
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.BlockData.Justification">
            <summary>
            Justification
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.BlockData.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Digest">
            <summary>
            Digest
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Digest.Logs">
            <summary>
            Logs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.ExtrinsicState">
            <summary>
            Extrinsic State
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Future">
            <summary>
            Future
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Broadcast">
            <summary>
            Broadcast
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.InBlock">
            <summary>
            InBlock
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Retracted">
            <summary>
            Retracted
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.FinalityTimeout">
            <summary>
            FinalityTimeout
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Finalized">
            <summary>
            Finalized
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Usurped">
            <summary>
            Usurped
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Dropped">
            <summary>
            Dropped
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.ExtrinsicState.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.ExtrinsicStatus">
            <summary>
            Extrinsic Status
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.ExtrinsicStatus.ExtrinsicState">
            <summary>
            Extrinsic State
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.ExtrinsicStatus.Broadcast">
            <summary>
            Broadcast
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.ExtrinsicStatus.Hash">
            <summary>
            Hash
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.ExtrinsicStatus.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.FeeDetails">
            <summary>
            Fee Details
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.FeeDetails.InclusionFee">
            <summary>
            Inclusion Fee
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.InclusionFee">
            <summary>
            Inclusion Fee
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.InclusionFee.BaseFee">
            <summary>
            Base Fee
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.InclusionFee.LenFee">
            <summary>
            Len Fee
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.InclusionFee.AdjustedWeightFee">
            <summary>
            Adjusted Weight Fee
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Header.Digest">
            <summary>
            Digest
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Header.ExtrinsicsRoot">
            <summary>
            Extrinsics Root
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Header.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Header.ParentHash">
            <summary>
            Parent Hash
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Header.StateRoot">
            <summary>
            State Root
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.Header.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Health">
            <summary>
            Health
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Health.IsSyncing">
            <summary>
            Is Syncing
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Health.Peers">
            <summary>
            Peers
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Health.ShouldHavePeers">
            <summary>
            Should Have Peers
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.Health.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Properties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Properties.Ss58Format">
            <summary>
            SS58 Format
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Properties.TokenDecimals">
            <summary>
            Token Decimals
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Properties.TokenSymbol">
            <summary>
            Token Symbol
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.Properties.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.ReadProof">
            <summary>
            Read Proof
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.ReadProof.At">
            <summary>
            At
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.ReadProof.Proof">
            <summary>
            Proof
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.ReadProof.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.RuntimeDispatchInfo">
            <summary>
            Runtime Dispatch Info
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeDispatchInfo.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeDispatchInfo.Class">
            <summary>
            Class
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeDispatchInfo.PartialFee">
            <summary>
            Partial Fee
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Weight.Ref_time">
            <summary>
            Ref Time
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.Weight.Proof_size">
            <summary>
            Proof Size
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.RuntimeVersion">
            <summary>
            Runtime Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.Apis">
            <summary>
            Apis
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.AuthoringVersion">
            <summary>
            Authoring Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.ImplName">
            <summary>
            Impl Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.ImplVersion">
            <summary>
            Impl Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.SpecName">
            <summary>
            Spec Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.SpecVersion">
            <summary>
            Spec Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.RuntimeVersion.TransactionVersion">
            <summary>
            Transaction Version
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.StorageChangeSet">
            <summary>
            Storage Change Set
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.StorageChangeSet.Block">
            <summary>
            Block Hash
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.StorageChangeSet.Changes">
            <summary>
            Changes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.StorageChangeSet.ToString">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Substrate.NetApi.Model.Rpc.NewStorageChangeSet" -->
        <member name="P:Substrate.NetApi.Model.Rpc.NewStorageChangeSet.Block">
            <summary>
            Block Hash
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.NewStorageChangeSet.Changes">
            <summary>
            Changes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.NewStorageChangeSet.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.StorageKey">
            <summary>
            Storage Key
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.StorageKey.TypeName">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.StorageData">
            <summary>
            Storage Data
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.StorageData.TypeName">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.SyncState">
            <summary>
            Sync State
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.SyncState.StartingBlock">
            <summary>
            Starting Block
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.SyncState.CurrentBlock">
            <summary>
            Current Block
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.SyncState.HighestBlock">
            <summary>
            Highest Block
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Rpc.SyncState.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.TransactionEvent">
            <summary>
            Transaction Event
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Validated">
            <summary>
            The validated event indicates that this transaction has been checked and is considered as valid by the runtime.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Broadcasted">
            <summary>
            The broadcasted event indicates the number of other peers this transaction has been broadcasted to.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.BestChainBlockIncluded">
            <summary>
            The bestChainBlockIncluded event indicates which block of the best chain the transaction is included in.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Finalized">
            <summary>
            The finalized event indicates that this transaction is present in a block of the chain that is finalized.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Error">
            <summary>
            The error event indicates that an internal error within the client has happened.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Invalid">
            <summary>
            The invalid event indicates that the runtime has marked the transaction as invalid.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Rpc.TransactionEvent.Dropped">
            <summary>
            The dropped event indicates that the client wasn't capable of keeping track of this transaction.
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Rpc.TransactionEventInfo">
            <summary>
            Transaction Event Info
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.TransactionEvent">
            <summary>   
            Transaction Event
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.NumPeers">
            <summary>
            Is the total number of individual peers this transaction has been broadcasted to.
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.Hash">
            <summary>
            Is a string containing the hexadecimal-encoded hash of the header of the block. index is an integer indicating the
            0-based index of this transaction within the body of this block.
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.Index">
            <summary>
            Index is an integer indicating the 0-based index of this transaction within the body of this block.
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.Broadcasted">
            <summary>
            If the broadcasted field is true, then this transaction has been sent to other peers and might still be included in the
            chain in the future. No guarantee is offered that the transaction will be included in the chain even if broadcasted is
            true. However, if broadcasted is false, then it is guaranteed that this transaction will not be included, unless it has
            been submitted in parallel on a different node.
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Rpc.TransactionEventInfo.Error">
            <summary>
            Is a human-readable error message indicating what happened. This string isn't meant to be shown to end users, but is for
            developers to understand the problem.
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.KeyType">
            <summary>
            Represents a key type.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Types.KeyType.Ed25519">
            <summary>
            Ed25519
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Types.KeyType.Sr25519">
            <summary>
            Sr25519
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.IAccount">
            <summary>
            Interface for an account.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IAccount.Sign(System.Byte[])">
            <summary>
            Sign the specified message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IAccount.Verify(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Verifies a signature from this account.
            </summary>
            <param name="signature"></param>
            <param name="publicKey"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Account">
            <summary>
            Represents an account.
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Account.KeyType">
            <summary>
            Key Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Account.KeyTypeByte">
            <summary>
            Key Type Byte
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Account.PrivateKey">
            <summary>
            Private Key
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Create(Substrate.NetApi.Model.Types.KeyType,System.Byte[],System.Byte[])">
            <summary>
            Creates the specified key type with private key.
            </summary>
            <param name="keyType"></param>
            <param name="privateKey"></param>
            <param name="publicKey"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Create(Substrate.NetApi.Model.Types.KeyType,System.Byte[])">
            <summary>
            Creates the specified key type, without private key.
            </summary>
            <param name="keyType"></param>
            <param name="publicKey"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Build(Substrate.NetApi.Model.Types.KeyType,System.Byte[],System.Byte[])">
            <summary>
            Builds the specified key type.
            </summary>
            <param name="keyType"></param>
            <param name="privateKey"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Sign(System.Byte[])">
            <summary>
            Signs the specified message.
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies a signature from this account.
            </summary>
            <param name="signature"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Account.Verify(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Verifies the specified signature.
            </summary>
            <param name="signature"></param>
            <param name="publicKey"></param>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.AccountId">
            <summary>
            Account Id
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.#ctor">
            <summary>
            Account Id Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.#ctor(System.String)">
            <summary>
            Account Id Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.#ctor(System.Byte[])">
            <summary>
            Account Id Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.AccountId.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.AccountId.Create(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2">
            <summary>
            This implemetation is just a fast hack, and misses to be complete.
            TODO: rework proper implementation https://docs.rs/bitvec/latest/bitvec/
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.TypeName">
            <summary>
            Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.TypeSize">
            <summary>
            Type Size
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Bytes">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Encode">
            <summary>
            Encode to Bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from a byte array at certain position
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Create(`0[])">
            <summary>
            Create from a string
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Create(System.String)">
            <summary>
            Create from a string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.CreateFromJson(System.String)">
            <summary>
            Create from a json string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Create(System.Byte[])">
            <summary>
            Create from a byte array
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.New">
            <summary>
            New
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Reverse(System.Byte[])">
            <summary>
            Reverse
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseBitSeq`2.Reverse(System.Byte)">
            <summary>
            Reverse
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseCom`1">
            <summary>
            A compact type is a variable-length integer type that is encoded in a variable number of bytes depending on its value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.op_Explicit(Substrate.NetApi.CompactInteger)~Substrate.NetApi.Model.Types.Base.BaseCom{`0}">
            <summary>
            Explicitly convert a CompactInteger to a BaseCom.
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.op_Implicit(Substrate.NetApi.Model.Types.Base.BaseCom{`0})~Substrate.NetApi.CompactInteger">
            <summary>
            Implicitly convert a BaseCom to a CompactInteger.
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.#ctor">
            <summary>
            Construct a new BaseCom.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.#ctor(Substrate.NetApi.CompactInteger)">
            <summary>
            Construct a new BaseCom.
            </summary>
            <param name="compactInteger"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseCom`1.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseCom`1.Create(Substrate.NetApi.CompactInteger)">
            <summary>
            Create a new BaseCom.
            </summary>
            <param name="compactInteger"></param>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnum`1">
            <summary>
            Base Enum Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.op_Explicit(`0)~Substrate.NetApi.Model.Types.Base.BaseEnum{`0}">
            <summary>
            Explicit conversion from T to BaseEnum
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.op_Implicit(Substrate.NetApi.Model.Types.Base.BaseEnum{`0})~`0">
            <summary>
            Implicit conversion from BaseEnum to T
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.#ctor">
            <summary>
            BaseEnum Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.#ctor(`0)">
            <summary>
            BaseEnum Constructor
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.TypeName">
            <summary>
            BaseEnum Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnum`1.TypeSize">
            <summary>
            BaseEnum Type Size
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Bytes">
            <summary>
            Base Enum Bytes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Encode">
            <summary>
            Base Enum Encode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Base Enum Decode
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Create(System.String)">
            <summary>
            Virtual Create
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Create(`0)">
            <summary>
            Create
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Create(System.Byte[])">
            <summary>
            Create
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.CreateFromJson(System.String)">
            <summary>
            Virtual Create From Json
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.New">
            <summary>
            New
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnum`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnum`1.Value">
            <summary>
            Base Enum Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumType">
            <summary>
            Base Enum Extended Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumType.DecodeType``1(System.Byte[],System.Int32@)">
            <summary>
            Decode Type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="byteArray"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`2.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`3.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`4.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`5.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`6.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`7.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`8.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`9.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`10.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`11.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`12.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`13.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`14.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`15.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`16.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`17.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`18.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`19.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`20.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`21.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`22.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`23.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`24.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`25.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`26.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`27.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`28.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`29.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`30.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`31.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`32.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`33.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`34.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`35.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`36.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`37.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`38.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`39.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`40.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`41.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`42.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`43.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`44.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`45.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`46.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`47.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`48.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`49.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`50.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`51.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`52.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`53.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`54.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`55.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`56.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`57.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`58.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`59.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`60.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`61.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`62.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`63.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`64.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`65.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`66.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`67.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`68.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`69.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`70.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`71.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`72.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`73.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`74.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`75.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`76.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`77.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`78.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`79.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`80.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`81.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`82.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`83.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`84.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`85.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`86.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`87.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`88.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`89.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`90.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`91.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`92.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`93.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`94.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`95.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`96.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`97.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`98.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`99.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`100.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`101.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`102.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`103.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`104.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`105.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`106.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`107.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`108.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`109.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`110.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`111.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`112.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`113.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`114.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`115.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`116.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`117.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`118.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`119.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`120.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`121.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`122.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`123.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`124.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`125.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`126.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`127.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`128.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`129.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`130.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`131.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`132.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`133.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`134.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`135.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`136.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`137.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`138.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`139.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`140.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`141.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`142.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`143.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`144.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`145.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`146.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`147.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`148.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`149.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`150.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`151.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`152.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`153.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`154.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`155.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`156.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`157.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`158.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`159.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`160.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`161.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`162.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`163.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`164.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`165.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`166.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`167.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`168.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`169.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`170.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`171.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`172.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`173.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`174.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`175.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`176.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`177.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`178.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`179.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`180.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`181.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`182.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`183.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`184.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`185.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`186.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`187.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`188.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`189.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`190.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`191.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`192.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`193.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`194.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`195.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`196.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`197.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`198.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`199.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`200.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`201.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`202.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`203.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`204.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`205.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`206.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`207.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`208.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`209.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`210.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`211.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`212.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`213.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`214.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`215.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`216.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`217.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`218.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`219.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`220.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`221.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`222.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`223.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`224.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`225.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`226.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`227.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`228.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`229.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`230.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`231.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`232.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`233.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`234.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`235.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`236.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`237.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`238.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`239.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`240.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`241.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`242.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`243.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`244.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`245.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`246.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.DecodeOneOf(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            BaseEnumExt DecodeOneOf
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.Create(`0,Substrate.NetApi.Model.Types.IType)">
            <summary>
            BaseEnumExt Create
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.Value">
            <summary>
            BaseEnumExt Enumeration Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseEnumExt`257.Value2">
            <summary>
            BaseEnumExt Type Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseOpt`1">
            <summary>
            Base Option Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.op_Implicit(`0)~Substrate.NetApi.Model.Types.Base.BaseOpt{`0}">
            <summary>
            Explicit conversion from T to BaseOpt
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.op_Explicit(Substrate.NetApi.Model.Types.Base.BaseOpt{`0})~`0">
            <summary>
            Explicit conversion from BaseOpt to T
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.#ctor">
            <summary>
            Base Option Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.#ctor(`0)">
            <summary>
            Base Option Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.TypeName">
            <summary>
            Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseOpt`1.TypeSize">
            <summary>
            Type Size
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Bytes">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Encode">
            <summary>
            Encode to Bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from a byte array at certain position
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseOpt`1.OptionFlag">
            <summary>
            Option Flag
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Create(`0)">
            <summary>
            Create from a string
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Create(System.String)">
            <summary>
            Create from a string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.CreateFromJson(System.String)">
            <summary>
            Create from a json string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.Create(System.Byte[])">
            <summary>
            Create from a byte array
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.New">
            <summary>
            New
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseOpt`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`1">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.#ctor">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.#ctor(`0)">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`1.Create(`0)">
            <summary>
            Create tuple
            </summary>
            <param name="t1"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`1.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`2">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.#ctor">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.#ctor(`0,`1)">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`2.Create(`0,`1)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`2.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`3">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.#ctor">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.#ctor(`0,`1,`2)">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`3.Create(`0,`1,`2)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`3.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`4">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.#ctor">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Base Tuple constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`4.Create(`0,`1,`2,`3)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`4.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`5">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`5.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`5.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`5.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`5.Create(`0,`1,`2,`3,`4)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`5.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`6">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`6.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`6.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`6.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`6.Create(`0,`1,`2,`3,`4,`5)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`6.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`7">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`7.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`7.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`7.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`7.Create(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`7.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`8">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`8.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`8.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`8.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`8.Create(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`8.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`9">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`9.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`9.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`9.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`9.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`9.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`10">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`10.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`10.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`10.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`10.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`10.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`11">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`11.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`11.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`11.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`11.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`11.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`12">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`12.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`12.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`12.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`12.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`12.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`13">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`13.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`13.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`13.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`13.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`13.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`14">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`14.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`14.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`14.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`14.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`14.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`15">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`15.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`15.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`15.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`15.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`15.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`16">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`16.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`16.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`16.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`16.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`16.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`17">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`17.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`17.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`17.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`17.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`17.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`18">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`18.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`18.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`18.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`18.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`18.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`19">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`19.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`19.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`19.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`19.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`19.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`20">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`20.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`20.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`20.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`20.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`20.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`21">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`21.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`21.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`21.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`21.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`21.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`22">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`22.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`22.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`22.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`22.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`22.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`23">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`23.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`23.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`23.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`23.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`23.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`24">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`24.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`24.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`24.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`24.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`24.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`25">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`25.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`25.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`25.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`25.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`25.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`26">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`26.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`26.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`26.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`26.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`26.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`27">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`27.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`27.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`27.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`27.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`27.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`28">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`28.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`28.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`28.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`28.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`28.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`29">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`29.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`29.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`29.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`29.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`29.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`30">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`30.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`30.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`30.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`30.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`30.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`31">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`31.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`31.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`31.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`31.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`31.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`32">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`32.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`32.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`32.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`32.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`32.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`33">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`33.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`33.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`33.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`33.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`33.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`34">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`34.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`34.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`34.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`34.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`34.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`35">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`35.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`35.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`35.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`35.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`35.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`36">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`36.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`36.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`36.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`36.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34,`35)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`36.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`37">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`37.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`37.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`37.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`37.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34,`35,`36)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`37.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`38">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`38.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`38.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`38.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`38.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34,`35,`36,`37)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`38.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseTuple`39">
            <summary>
            Base class for multiple tuples type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`39.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`39.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`39.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseTuple`39.Create(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34,`35,`36,`37,`38)">
            <summary>
            Create tuple
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseTuple`39.Value">
            <summary>
            Value of tuple
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseType">
            <summary>
            Base Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.TypeName">
            <summary>
            Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseType.TypeSize">
            <summary>
            Type Size
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseType.Bytes">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.Encode">
            <summary>
            Encode to Bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from a byte array at certain position
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.Create(System.String)">
            <summary>
            Create from a string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.Create(System.Byte[])">
            <summary>
            Create from a byte array
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.CreateFromJson(System.String)">
            <summary>
            Create from a json string
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.New">
            <summary>
            New
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseType.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseVec`1">
            <summary>
            Base Vec Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.op_Explicit(`0[])~Substrate.NetApi.Model.Types.Base.BaseVec{`0}">
            <summary>
            Explicit conversion from T[] to BaseVec
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.op_Implicit(Substrate.NetApi.Model.Types.Base.BaseVec{`0})~`0[]">
            <summary>
            Implicit conversion from BaseVec to T[]
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.#ctor">
            <summary>
            BaseVec Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.#ctor(`0[])">
            <summary>
            BaseVec Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.TypeName">
            <summary>
            BaseVec Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseVec`1.TypeSize">
            <summary>
            BaseVec Type Size
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseVec`1.Bytes">
            <summary>
            BaseVec Bytes
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.Encode">
            <summary>
            BaseVec Encode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            BaseVec Decode
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseVec`1.Value">
            <summary>
            BaseVec Value
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.Create(`0[])">
            <summary>
            BaseVec Create
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.Create(System.String)">
            <summary>
            BaseVec Create
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.CreateFromJson(System.String)">
            <summary>
            BaseVec Create From Json
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.Create(System.Byte[])">
            <summary>
            BaseVec Create
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.New">
            <summary>
            BaseVec New
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVec`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BaseVoid">
            <summary>
            Base Void Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVoid.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BaseVoid.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVoid.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BaseVoid.Encode">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.BlockNumber">
            <summary>
            BlockNumber Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.op_Explicit(System.UInt32)~Substrate.NetApi.Model.Types.Base.BlockNumber">
            <summary>
            Explicit conversion to BlockNumber
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.op_Implicit(Substrate.NetApi.Model.Types.Base.BlockNumber)~System.UInt32">
            <summary>
            Implicit conversion to uint
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.#ctor">
            <summary>
            BlockNumber Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.#ctor(System.UInt32)">
            <summary>
            BlockNumber Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.BlockNumber.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.BlockNumber.Create(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Base.Hash">
            <summary>
            Hash Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.op_Explicit(System.Byte[])~Substrate.NetApi.Model.Types.Base.Hash">
            <summary>
            Explicit conversion from byte[] to Hash
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.op_Implicit(Substrate.NetApi.Model.Types.Base.Hash)~System.Byte[]">
            <summary>
            Implicit conversion from Hash to byte[]
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.#ctor">
            <summary>
            Hash Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.#ctor(System.String)">
            <summary>
            Hash Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.#ctor(System.Byte[])">
            <summary>
            Hash Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Base.Hash.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Base.Hash.Create(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.BasePrim`1">
            <summary>
            Abstract Base Primitive Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.BasePrim`1.#ctor">
            <summary>
            Base Primitive Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.BasePrim`1.#ctor(`0)">
            <summary>
            Base Primitive Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.BasePrim`1.Create(`0)">
            <summary>
            Base Primitive Create
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.BasePrim`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Base Primitive Decode
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.BasePrim`1.ToString">
            <summary>
            Base Primitive to string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.BasePrim`1.Value">
            <summary>
            Base Primitive Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.IEncodable">
            <summary>
            Encodable Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IEncodable.Encode">
            <summary>
            Encode
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.IType">
            <summary>
                Reference to the polkadot js types implementation
                https://github.com/polkadot-js/api/tree/master/packages/types/src
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.TypeName">
            <summary>
            Names this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.IType.TypeSize">
            <summary>
            Sizes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified byte array.
            </summary>
            <param name="byteArray">The byte array.</param>
            <param name="p">The p.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.Create(System.String)">
            <summary>
            Creates the specified string.
            </summary>
            <param name="str">The string.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.Create(System.Byte[])">
            <summary>
            Creates the specified byte array.
            </summary>
            <param name="byteArray">The byte array.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.CreateFromJson(System.String)">
            <summary>
            Creates from json.
            </summary>
            <param name="str">The string.</param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.IType.New">
            <summary>
            News this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata">
            <summary>
            Runtime Metadata Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata.MetaDataInfo">
            <summary>
            Meta Data Info
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.RuntimeMetadata.RuntimeMetadataData">
            <summary>
            Runtime Metadata Data
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.Field">
            <summary>
            Field Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Field.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Field.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Field.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Field.FieldName">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Field.FieldTy">
            <summary>
            Field Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Field.FieldTypeName">
            <summary>
            Field Type Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Field.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PortableRegistry">
            <summary>
            Portable Registry
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PortableRegistry.TypeName">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PortableType">
            <summary>
            Portable Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PortableType.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PortableType.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PortableType.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PortableType.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PortableType.Ty">
            <summary>
            Ty
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14">
            <summary>
            Runtime Metadata V14
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.Types">
            <summary>
            Types
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.Modules">
            <summary>
            Modules
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.Extrinsic">
            <summary>
            Extrinsic
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.RuntimeMetadataV14.TypeId">
            <summary>
            Type Id
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.MetaDataInfo">
            <summary>
            Meta Data Info Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.MetaDataInfo.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.MetaDataInfo.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from byte array
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.MetaDataInfo.Magic">
            <summary>
            Magic
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.MetaDataInfo.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata">
            <summary>
            Palette Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletName">
            <summary>
            Palette Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletStorage">
            <summary>
            Palette Storage
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletCalls">
            <summary>
            Palette Calls
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletEvents">
            <summary>
            Palette Events
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletConstants">
            <summary>
            Palette Constants
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.PalletErrors">
            <summary>
            Palette Errors
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletMetadata.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.StorageMetadata">
            <summary>
            Storage Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageMetadata.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageMetadata.Entries">
            <summary>
            Entries
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata">
            <summary>
            Storage Entry Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.StorageName">
            <summary>
            Storage Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.StorageModifier">
            <summary>
            Storage Modifier
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.StorageType">
            <summary>
            Storage Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.StorageDefault">
            <summary>
            Storage Default
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryMetadata.Documentation">
            <summary>
            Documentation
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.ByteGetter">
            <summary>
            Byte Getter
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap">
            <summary>
            Storage Entry Type Map
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap.Hashers">
            <summary>
            Hashers
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.StorageEntryTypeMap.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PalletCallMetadata">
            <summary>
            Pallet Call Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletCallMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletCallMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletCallMetadata.CallType">
            <summary>
            Call Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PalletEventMetadata">
            <summary>
            Palette Event Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletEventMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletEventMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletEventMetadata.EventType">
            <summary>
            Event Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata">
            <summary>
            Pallet Constant Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.Encode">
            <summary>
            Encode to Bytes
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from a byte array at certain position
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.ConstantName">
            <summary>
            Constant Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.ConstantType">
            <summary>
            Constant Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.ConstantValue">
            <summary>
            Constant Value
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.PalletConstantMetadata.Documentation">
            <summary>
            Documentation
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.ErrorMetadata">
            <summary>
            Error Metadata
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.ErrorMetadata.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.ErrorMetadata.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.ErrorMetadata.ErrorType">
            <summary>
            Error Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct">
            <summary>
            Extrinsic Metadata Struct
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct.ExtrinsicType">
            <summary>
            Extrinsic Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.ExtrinsicMetadataStruct.SignedExtensions">
            <summary>
            Signed Extensions
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct">
            <summary>
            Signed Extension Metadata Struct
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct.SignedIdentifier">
            <summary>
            Signed Identifier
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct.SignedExtType">
            <summary>
            Signed Extension Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.SignedExtensionMetadataStruct.AddSignedExtType">
            <summary>
            Add Signed Extension Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType">
            <summary>
            Compact Integer Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.TypeName">
            <summary>
            Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.TypeSize">
            <summary>
            Type Size
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.Create(System.String)">
            <summary>
            Create from string
            </summary>
            <param name="str"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.Create(System.Byte[])">
            <summary>
            Create from byte array
            </summary>
            <param name="byteArray"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.CreateFromJson(System.String)">
            <summary>
            Create from Json
            </summary>
            <param name="str"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decode from byte array
            </summary>
            <param name="byteArray"></param>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.Encode">
            <summary>
            Encode to byte array
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.New">
            <summary>
            New
            </summary>
            <returns></returns>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.CompactIntegerType.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TType">
            <summary>
            T Type Definition
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TType.TypeName">
            <summary>
            Type Name
            </summary>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum">
            <summary>
            Type Definition Enum
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Composite">
            A composite type (e.g. a struct or a tuple)
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Variant">
            A variant type (e.g. an enum)
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Sequence">
            A sequence type with runtime known length.
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Array">
            An array type with compile-time known length.
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Tuple">
            A tuple type.
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Primitive">
            A Rust primitive type.
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.Compact">
            A type using the [`Compact`] encoding
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefEnum.BitSequence">
            A type representing a sequence of bits.
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefComposite">
            <summary>
            Type Definition Composite Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefComposite.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefComposite.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefComposite.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefComposite.Fields">
            <summary>
            Fields
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefVariant">
            <summary>
            Type Definition Variant Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefVariant.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefVariant.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefVariant.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefVariant.TypeParam">
            <summary>
            Type Param
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefSequence">
            <summary>
            Type Definition Sequence Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefSequence.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefSequence.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefSequence.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefSequence.TypeParam">
            <summary>
            Type Param
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray">
            <summary>
            Type Definition Array Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray.Len">
            <summary>
            Len
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefArray.TypeParam">
            <summary>
            Type Param
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefTuple">
            <summary>
            Type Definition Tuple Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefTuple.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefTuple.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefTuple.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefTuple.Fields">
            <summary>
            Fields
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive">
            <summary>
            Type Definition Primitive Type
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.Bool">
            `bool` type
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.Char">
            `char` type
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.Str">
            `str` type
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U8">
            `u8`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U16">
            `u16`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U32">
            `u32`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U64">
            `u64`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U128">
            `u128`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.U256">
            256 bits unsigned int (no rust equivalent)
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I8">
            `i8`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I16">
            `i16`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I32">
            `i32`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I64">
            `i64`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I128">
            `i128`
        </member>
        <member name="F:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefPrimitive.I256">
            256 bits signed int (no rust equivalent)
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefCompact">
            <summary>
            Type Definition Compact Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefCompact.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefCompact.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefCompact.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefCompact.TypeParam">
            <summary>
            Type Param
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence">
            <summary>
            Type Definition Bit Sequence Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence.BitStoreType">
            <summary>
            Bit Store Type
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeDefBitSequence.BitOrderType">
            <summary>
            Bit Order Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm">
            <summary>
            Type Portable Form
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.TypeParams">
            <summary>
            Type Parameters
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.TypeDef">
            <summary>
            Type Definition
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypePortableForm.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Path.TypeName">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter">
            <summary>
            Type Parameter
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter.TypeParameterName">
            <summary>
            Type Parameter Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.TypeParameter.TypeParameterType">
            <summary>
            Type Parameter Type
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Metadata.V14.Variant">
            <summary>
            Variant Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Variant.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Variant.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Metadata.V14.Variant.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Variant.VariantName">
            <summary>
            Variant Name
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Variant.VariantFields">
            <summary>
            Variant Fields
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Variant.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Metadata.V14.Variant.Docs">
            <summary>
            Docs
            </summary>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.Bool">
            <summary>
            Bool Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.op_Explicit(System.Boolean)~Substrate.NetApi.Model.Types.Primitive.Bool">
            <summary>
            Explicit conversion to Bool
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.op_Implicit(Substrate.NetApi.Model.Types.Primitive.Bool)~System.Boolean">
            <summary>
            Implicit conversion to bool
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.#ctor">
            <summary>
            Bool Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.#ctor(System.Boolean)">
            <summary>
            Bool Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.Bool.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Bool.Create(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I128">
            <summary>
            I128 Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.op_Explicit(System.Numerics.BigInteger)~Substrate.NetApi.Model.Types.Primitive.I128">
            <summary>
            Explicit conversion to I128
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I128)~System.Numerics.BigInteger">
            <summary>
            Implicit conversion to BigInteger
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.#ctor">
            <summary>
            I128 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.#ctor(System.Numerics.BigInteger)">
            <summary>
            I128 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I128.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.Create(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I128.Create(System.Numerics.BigInteger)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I16">
            <summary>
            I16 Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.op_Explicit(System.Int16)~Substrate.NetApi.Model.Types.Primitive.I16">
            <summary>
            Explicit conversion to I16
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I16)~System.Int16">
            <summary>
            Implicit conversion to short
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.#ctor">
            <summary>
            I16 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.#ctor(System.Int16)">
            <summary>
            I16 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I16.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I16.Create(System.Int16)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I256">
            <summary>
            I256 Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.op_Explicit(System.Numerics.BigInteger)~Substrate.NetApi.Model.Types.Primitive.I256">
            <summary>
            Explicit conversion to I256
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I256)~System.Numerics.BigInteger">
            <summary>
            Implicit conversion to BigInteger
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.#ctor">
            <summary>
            I256 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.#ctor(System.Numerics.BigInteger)">
            <summary>
            I256 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I256.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.Create(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I256.Create(System.Numerics.BigInteger)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I32">
            <summary>
            I32
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.op_Explicit(System.Int32)~Substrate.NetApi.Model.Types.Primitive.I32">
            <summary>
            Explicitly cast a int to a I32
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I32)~System.Int32">
            <summary>
            Implicitly cast a I32 to a int
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.#ctor">
            <summary>
            I32 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.#ctor(System.Int32)">
            <summary>
            I32 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I32.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I32.Create(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I64">
            <summary>
            I64
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.op_Explicit(System.Int64)~Substrate.NetApi.Model.Types.Primitive.I64">
            <summary>
            Explicitly cast a long to a I64
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I64)~System.Int64">
            <summary>
            Implicitly cast a I64 to a long
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.#ctor">
            <summary>
            I64 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.#ctor(System.Int64)">
            <summary>
            I64 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I64.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I64.Create(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.I8">
            <summary>
            I8
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.op_Explicit(System.SByte)~Substrate.NetApi.Model.Types.Primitive.I8">
            <summary>
            Explicitly cast a sbyte to a I8
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.op_Implicit(Substrate.NetApi.Model.Types.Primitive.I8)~System.SByte">
            <summary>
            Implicitly cast a I8 to a sbyte
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.#ctor">
            <summary>
            I8 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.#ctor(System.SByte)">
            <summary>
            I8 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.I8.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.I8.Create(System.SByte)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.PrimChar">
            <summary>
            Char Primitive Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.op_Explicit(System.Char)~Substrate.NetApi.Model.Types.Primitive.PrimChar">
            <summary>
            Explicitly cast a char to a PrimChar
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.op_Implicit(Substrate.NetApi.Model.Types.Primitive.PrimChar)~System.Char">
            <summary>
            Implicitly cast a PrimChar to a char
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.#ctor">
            <summary>
            Prim Char Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.#ctor(System.Char)">
            <summary>
            Prim Char Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.PrimChar.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.PrimChar.Create(System.Char)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.Str">
            <summary>
            String Primitive Type
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.op_Explicit(System.String)~Substrate.NetApi.Model.Types.Primitive.Str">
            <summary>
            Explicitly cast a string to a Str
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.op_Implicit(Substrate.NetApi.Model.Types.Primitive.Str)~System.String">
            <summary>
            Implicitly cast a Str to a string
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.#ctor">
            <summary>
            Str Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.#ctor(System.String)">
            <summary>
            Str Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.TypeName">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.Decode(System.Byte[],System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.Str.Create(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U128">
            <summary>
            U128
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.op_Explicit(System.Numerics.BigInteger)~Substrate.NetApi.Model.Types.Primitive.U128">
            <summary>
            Explicitly cast a BigInteger to a U128
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U128)~System.Numerics.BigInteger">
            <summary>
            Implicitly cast a U128 to a BigInteger
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.#ctor">
            <summary>
            U128 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.#ctor(System.Numerics.BigInteger)">
            <summary>
            U128 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U128.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U128.Create(System.Numerics.BigInteger)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U16">
            <summary>
            U16
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.op_Explicit(System.UInt16)~Substrate.NetApi.Model.Types.Primitive.U16">
            <summary>
            Explicitly cast a ushort to a U16
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U16)~System.UInt16">
            <summary>
            Implicitly cast a U16 to a ushort
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.#ctor">
            <summary>
            U16 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.#ctor(System.UInt16)">
            <summary>
            U16 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U16.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U16.Create(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U256">
            <summary>
            U256
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.op_Explicit(System.Numerics.BigInteger)~Substrate.NetApi.Model.Types.Primitive.U256">
            <summary>
            Explicitly cast a BigInteger to a U256
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U256)~System.Numerics.BigInteger">
            <summary>
            Implicitly cast a U256 to a BigInteger
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.#ctor">
            <summary>
            U256 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.#ctor(System.Numerics.BigInteger)">
            <summary>
            U256 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U256.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U256.Create(System.Numerics.BigInteger)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U32">
            <summary>
            U32
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.op_Explicit(System.UInt32)~Substrate.NetApi.Model.Types.Primitive.U32">
            <summary>
            Explicitly cast a uint to a U32
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U32)~System.UInt32">
            <summary>
            Implicitly cast a U32 to a uint
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.#ctor">
            <summary>
            U32 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.#ctor(System.UInt32)">
            <summary>
            U32 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U32.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U32.Create(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U64">
            <summary>
            U64
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.op_Explicit(System.UInt64)~Substrate.NetApi.Model.Types.Primitive.U64">
            <summary>
            Explicitly cast a ulong to a U64
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U64)~System.UInt64">
            <summary>
            Implicitly cast a U64 to a ulong
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.#ctor">
            <summary>
            U64 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.#ctor(System.UInt64)">
            <summary>
            U64 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U64.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.CreateFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U64.Create(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Model.Types.Primitive.U8">
            <summary>
            U8
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.op_Explicit(System.Byte)~Substrate.NetApi.Model.Types.Primitive.U8">
            <summary>
            Explicitly cast a byte to a U8
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.op_Implicit(Substrate.NetApi.Model.Types.Primitive.U8)~System.Byte">
            <summary>
            Implicitly cast a U8 to a byte
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.#ctor">
            <summary>
            U8 Constructor
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.#ctor(System.Byte)">
            <summary>
            U8 Constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:Substrate.NetApi.Model.Types.Primitive.U8.TypeSize">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.Encode">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.Create(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Model.Types.Primitive.U8.Create(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.Author">
            <summary>
            Author Module
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            Author Module Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.PendingExtrinsicAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.PendingExtrinsicAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitExtrinsicAsync(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitExtrinsicAsync(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitExtrinsicAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitExtrinsicAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.UnwatchExtrinsicAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Author.UnwatchExtrinsicAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.Chain">
            <summary>
            Chain Module
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            Chain Module Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetHeaderAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetHeaderAsync(Substrate.NetApi.Model.Types.Base.Hash)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetHeaderAsync(Substrate.NetApi.Model.Types.Base.Hash,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockAsync(Substrate.NetApi.Model.Types.Base.Hash)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockAsync(Substrate.NetApi.Model.Types.Base.Hash,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockHashAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockHashAsync(Substrate.NetApi.Model.Types.Base.BlockNumber)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockHashAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetBlockHashAsync(Substrate.NetApi.Model.Types.Base.BlockNumber,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetFinalizedHeadAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.GetFinalizedHeadAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeAllHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeAllHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnsubscribeAllHeadsAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnsubscribeAllHeadsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeNewHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeNewHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnubscribeNewHeadsAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnsubscribeNewHeadsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeFinalizedHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.SubscribeFinalizedHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnsubscribeFinalizedHeadsAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Chain.UnsubscribeFinalizedHeadsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.IAuthor">
            <summary>
            Author Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.PendingExtrinsicAsync">
            <summary>
            Returns all pending extrinsics, potentially grouped by sender
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.PendingExtrinsicAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all pending extrinsics, potentially grouped by sender
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},System.String)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitAndWatchExtrinsicAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus},System.String,System.Threading.CancellationToken)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="parameters"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitExtrinsicAsync(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <summary>
            Submit a fully formatted extrinsic for block inclusion
            </summary>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitExtrinsicAsync(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Submit a fully formatted extrinsic for block inclusion
            </summary>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitExtrinsicAsync(System.String)">
            <summary>
            Submit a fully formatted extrinsic for block inclusion
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.SubmitExtrinsicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Submit a fully formatted extrinsic for block inclusion
            </summary>
            <param name="parameters"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.UnwatchExtrinsicAsync(System.String)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IAuthor.UnwatchExtrinsicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.IChain">
            <summary>
            Chain Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockAsync">
            <summary>
            Get header and body of a relay chain block
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockAsync(System.Threading.CancellationToken)">
            <summary>
            Get header and body of a relay chain block
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockAsync(Substrate.NetApi.Model.Types.Base.Hash)">
            <summary>
            Get header and body of a relay chain block
            </summary>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockAsync(Substrate.NetApi.Model.Types.Base.Hash,System.Threading.CancellationToken)">
            <summary>
            Get header and body of a relay chain block
            </summary>
            <param name="hash"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockHashAsync">
            <summary>
            Get the block hash for a specific block
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockHashAsync(Substrate.NetApi.Model.Types.Base.BlockNumber)">
            <summary>
            Get the block hash for a specific block
            </summary>
            <param name="blockNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockHashAsync(Substrate.NetApi.Model.Types.Base.BlockNumber,System.Threading.CancellationToken)">
            <summary>
            Get the block hash for a specific block
            </summary>
            <param name="blockNumber"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetBlockHashAsync(System.Threading.CancellationToken)">
            <summary>
            Get the block hash for a specific block
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetFinalizedHeadAsync">
            <summary>
            Get hash of the last finalized block in the canon chain
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetFinalizedHeadAsync(System.Threading.CancellationToken)">
            <summary>
            Get hash of the last finalized block in the canon chain
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetHeaderAsync(Substrate.NetApi.Model.Types.Base.Hash)">
            <summary>
            Retrieves the header for a specific block
            </summary>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetHeaderAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the header for a specific block
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.GetHeaderAsync(Substrate.NetApi.Model.Types.Base.Hash,System.Threading.CancellationToken)">
            <summary>
            Retrieves the header for a specific block
            </summary>
            <param name="hash"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeAllHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <summary>
            Retrieves the newest header via subscription
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeAllHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <summary>
            Retrieves the newest header via subscription
            </summary>
            <param name="callback"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeFinalizedHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <summary>
            Retrieves the best finalized header via subscription
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeFinalizedHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <summary>
            Retrieves the best finalized header via subscription
            </summary>
            <param name="callback"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeNewHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header})">
            <summary>
            Retrieves the best header via subscription
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.SubscribeNewHeadsAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.Header},System.Threading.CancellationToken)">
            <summary>
            Retrieves the best header via subscription
            </summary>
            <param name="callback"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnsubscribeAllHeadsAsync(System.String)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnsubscribeAllHeadsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnsubscribeFinalizedHeadsAsync(System.String)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnsubscribeFinalizedHeadsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnsubscribeNewHeadsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IChain.UnubscribeNewHeadsAsync(System.String)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.IPayment">
            <summary>
            Payment Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IPayment.QueryFeeDetailAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Query the detailed fee of a given encoded extrinsic
            </summary>
            <param name="extrinsic"></param>
            <param name="blockHash"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IPayment.QueryInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the fee information for an encoded extrinsic
            </summary>
            <param name="extrinsic"></param>
            <param name="blockHash"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.IState">
            <summary>
            State Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[])">
            <summary>
            Asynchronously retrieves a paged list of keys from the state with a specified prefix.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix to query.</param>
            <param name="pageCount">The number of pages to retrieve.</param>
            <param name="startKey">The starting key for pagination, if any.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of keys.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves a paged list of keys from the state with a specified prefix, using a cancellation token.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix to query.</param>
            <param name="pageCount">The number of pages to retrieve.</param>
            <param name="startKey">The starting key for pagination, if any.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of keys.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves a paged list of keys from the state with a specified prefix at a specific block hash.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix to query.</param>
            <param name="pageCount">The number of pages to retrieve.</param>
            <param name="startKey">The starting key for pagination, if any.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of keys at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetMetaDataAsync">
            <summary>
            Asynchronously retrieves the metadata of the blockchain state.
            </summary>
            <returns>A task that represents the asynchronous operation and returns the metadata as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetMetaDataAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the metadata of the blockchain state with a cancellation token.
            </summary>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the metadata as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetMetaDataAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the metadata of the blockchain state at a specific block hash.
            </summary>
            <param name="blockHash">The block hash to query the metadata at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the metadata as a string at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetPairsAsync(System.Byte[])">
            <summary>
            Asynchronously retrieves key-value pairs from the state with a specified prefix.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of key-value pairs.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetPairsAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves key-value pairs from the state with a specified prefix and a cancellation token.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of key-value pairs.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetPairsAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves key-value pairs from the state with a specified prefix at a specific block hash.
            </summary>
            <param name="keyPrefix">The byte array representing the key prefix.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a JArray of key-value pairs at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Asynchronously retrieves a read-proof for a set of keys in the state.
            </summary>
            <param name="keyPrefixes">A collection of byte arrays representing the keys for which the read-proof is requested.</param>
            <returns>A task that represents the asynchronous operation and returns the read-proof.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]},System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves a read-proof for a set of keys in the state with a cancellation token.
            </summary>
            <param name="keyPrefixes">A collection of byte arrays representing the keys for which the read-proof is requested.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the read-proof.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]},System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves a read-proof for a set of keys in the state at a specific block hash.
            </summary>
            <param name="keyPrefixes">A collection of byte arrays representing the keys for which the read-proof is requested.</param>
            <param name="blockHash">The block hash to query the read-proof at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the read-proof at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetRuntimeVersionAsync">
            <summary>
            Asynchronously retrieves the current runtime version of the blockchain.
            </summary>
            <returns>A task that represents the asynchronous operation and returns the current runtime version.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetRuntimeVersionAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the current runtime version of the blockchain with a cancellation token.
            </summary>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the current runtime version.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetRuntimeVersionAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the runtime version of the blockchain at a specific block hash.
            </summary>
            <param name="blockHash">The block hash to query the runtime version at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the runtime version at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageAsync(System.Byte[])">
            <summary>
            Asynchronously retrieves the storage data for given parameters.
            </summary>
            <param name="parameters">The parameters for which the storage data is requested.</param>
            <returns>A task that represents the asynchronous operation and returns the storage data.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the storage data for given parameters with a cancellation token.
            </summary>
            <param name="parameters">The parameters for which the storage data is requested.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage data.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the storage data for given parameters at a specific block hash.
            </summary>
            <param name="parameters">The parameters for which the storage data is requested.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage data.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageHashAsync(System.Byte[])">
            <summary>
            Asynchronously retrieves the hash of the storage data for a given key.
            </summary>
            <param name="key">The key for which the storage hash is requested.</param>
            <returns>A task that represents the asynchronous operation and returns the storage hash.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageHashAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the hash of the storage data for a given key with a cancellation token.
            </summary>
            <param name="key">The key for which the storage hash is requested.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage hash.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageHashAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the hash of the storage data for a given key at a specific block hash.
            </summary>
            <param name="key">The key for which the storage hash is requested.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage hash.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageSizeAsync(System.Byte[])">
            <summary>
            Asynchronously retrieves the storage size for given parameters.
            </summary>
            <param name="parameters">The parameters for which the storage size is requested.</param>
            <returns>A task that represents the asynchronous operation and returns the storage size.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageSizeAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the storage size for given parameters with a cancellation token.
            </summary>
            <param name="parameters">The parameters for which the storage size is requested.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage size.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetStorageSizeAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the storage size for given parameters at a specific block hash.
            </summary>
            <param name="parameters">The parameters for which the storage size is requested.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns the storage size.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetQueryStorageAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.String)">
            <summary>
            Asynchronously queries storage changes for a given set of keys within a specified block range.
            </summary>
            <param name="keysList">List of keys to query for changes.</param>
            <param name="fromBlock">The starting block hash for the query range.</param>
            <param name="toBlock">The ending block hash for the query range.</param>
            <returns>A task that represents the asynchronous operation and returns a collection of storage change sets.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetQueryStorageAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously queries storage changes for a given set of keys within a specified block range, with a cancellation token.
            </summary>
            <param name="keysList">List of keys to query for changes.</param>
            <param name="fromBlock">The starting block hash for the query range.</param>
            <param name="toBlock">The ending block hash for the query range.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a collection of storage change sets.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetQueryStorageAtAsync(System.Collections.Generic.List{System.Byte[]},System.Byte[])">
            <summary>
            Asynchronously queries storage changes for a given set of keys at a specific block hash.
            </summary>
            <param name="keysList">List of keys to query for changes.</param>
            <param name="blockHash">The block hash to query at.</param>
            <returns>A task that represents the asynchronous operation and returns a collection of storage change sets at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetQueryStorageAtAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously queries storage changes for a given set of keys at a specific block hash, with a cancellation token.
            </summary>
            <param name="keysList">List of keys to query for changes.</param>
            <param name="blockHash">The block hash to query at.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task that represents the asynchronous operation and returns a collection of storage change sets at the specified block.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.SubscribeRuntimeVersionAsync">
            <summary>
            Asynchronously subscribes to updates of the runtime version.
            </summary>
            <returns>A task representing the asynchronous operation, returning a subscription ID as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.SubscribeRuntimeVersionAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously subscribes to updates of the runtime version with a cancellation token.
            </summary>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning a subscription ID as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.SubscribeRuntimeVersionAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously subscribes to updates of the runtime version at a specific block hash.
            </summary>
            <param name="blockHash">The block hash to subscribe to.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning a subscription ID as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.SubscribeStorageAsync(Newtonsoft.Json.Linq.JArray,System.Action{System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet})">
            <summary>
            Asynchronously subscribes to changes in the storage for specified keys.
            </summary>
            <param name="keys">A collection of keys to subscribe to.</param>
            <param name="callback">The callback action to invoke on each storage change.</param>
            <returns>A task representing the asynchronous operation, returning a subscription ID as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.SubscribeStorageAsync(Newtonsoft.Json.Linq.JArray,System.Action{System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet},System.Threading.CancellationToken)">
            <summary>
            Asynchronously subscribes to changes in the storage for specified keys, with a cancellation token.
            </summary>
            <param name="keys">A collection of keys to subscribe to.</param>
            <param name="callback">The callback action to invoke on each storage change.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning a subscription ID as a string.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetTraceBlockAsync(System.Byte[])">
            <summary>
            Asynchronously traces a block.
            </summary>
            <param name="parameters">The parameters specifying the block to trace.</param>
            <returns>A task representing the asynchronous operation, returning trace data.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetTraceBlockAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously traces a block with a cancellation token.
            </summary>
            <param name="parameters">The parameters specifying the block to trace.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning trace data.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.GetTraceBlockAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously traces a block at a specific block hash.
            </summary>
            <param name="parameters">The parameters specifying the block to trace.</param>
            <param name="blockHash">The block hash to trace.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning trace data at the specified block hash.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.UnsubscribeRuntimeVersionAsync(System.String)">
            <summary>
            Asynchronously unsubscribes from updates of the runtime version.
            </summary>
            <param name="subscriptionId">The subscription ID to cancel.</param>
            <returns>A task representing the asynchronous operation, returning a boolean indicating success or failure.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.UnsubscribeRuntimeVersionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously unsubscribes from updates of the runtime version with a cancellation token.
            </summary>
            <param name="subscriptionId">The subscription ID to cancel.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning a boolean indicating success or failure.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.UnsubscribeStorageAsync(System.String)">
            <summary>
            Asynchronously unsubscribes from changes in the storage.
            </summary>
            <param name="subscriptionId">The subscription ID to cancel.</param>
            <returns>A task representing the asynchronous operation, returning a boolean indicating success or failure.</returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IState.UnsubscribeStorageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously unsubscribes from changes in the storage with a cancellation token.
            </summary>
            <param name="subscriptionId">The subscription ID to cancel.</param>
            <param name="token">A cancellation token.</param>
            <returns>A task representing the asynchronous operation, returning a boolean indicating success or failure.</returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.ISystem">
            <summary>
            System Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.AccountNextIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the next accountIndex as available on the node
            </summary>
            <param name="address"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.AddLogFilterAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Adds the supplied directives to the current log filter
            </summary>
            <param name="directives"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.AddReservedPeerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a reserved peer
            </summary>
            <param name="peer"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ChainAsync">
            <summary>
            Retrieves the chain
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ChainAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the chain
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ChainTypeAsync">
            <summary>
            Retrieves the chain type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ChainTypeAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the chain type
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.DryRunAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Dry run an extrinsic at a given block
            </summary>
            <param name="extrinsicHex"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.DryRunAtAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Dry run an extrinsic at a given block at specific block
            </summary>
            <param name="extrinsicHex"></param>
            <param name="blockHashHex"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.HealthAsync">
            <summary>
            Return health status of the node
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.HealthAsync(System.Threading.CancellationToken)">
            <summary>
            Return health status of the node
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.LocalListenAddressesAsync(System.Threading.CancellationToken)">
            <summary>
            The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.LocalPeerIdAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the base58-encoded PeerId of the node
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.NameAsync">
            <summary>
            Retrieves the node name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.NameAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the node name
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.NodeRolesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the roles the node is running as
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.PeersAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the currently connected peers
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.PropertiesAsync">
            <summary>
            Get a custom set of properties as a JSON object, defined in the chain spec
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.PropertiesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a custom set of properties as a JSON object, defined in the chain spec
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.RemoveReservedPeerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a reserved peer
            </summary>
            <param name="peerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ReservedPeersAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the list of reserved peers
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.ResetLogFilterAsync(System.Threading.CancellationToken)">
            <summary>
            Resets the log filter to Substrate defaults
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.SyncStateAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the state of the syncing of the node
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.VersionAsync">
            <summary>
            Retrieves the version of the node
            </summary>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.ISystem.VersionAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the version of the node
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Contracts.IUnstableCalls">
            <summary>
            UnstableCalls Module Interface
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},System.String)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},System.String,System.Threading.CancellationToken)">
            <summary>
            Submit and subscribe to watch an extrinsic until unsubscribed
            </summary>
            <param name="callback"></param>
            <param name="parameters"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableUnwatchAsync(System.String)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Modules.Contracts.IUnstableCalls.TransactionUnstableUnwatchAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unsuscribe to given subscription id
            </summary>
            <param name="subscriptionId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.Modules.Payment">
            <summary>
            Payment Module
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.Payment.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            Payment Module Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.Payment.QueryFeeDetailAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.Payment.QueryInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.State">
            <summary>
            State Module
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Modules.State._client">
            <summary>
            Substrate client.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            The state module allows you to interact with the storage of the runtime.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetKeysPagedAsync(System.Byte[],System.UInt32,System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetMetaDataAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetMetaDataAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetMetaDataAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetMetaDataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetPairsAsync(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetPairsAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetPairsAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetPairsAsync(System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]},System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetReadProofAsync(System.Collections.Generic.IEnumerable{System.Byte[]},System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetRuntimeVersionAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetRuntimeVersionAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetRuntimeVersionAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetRuntimeVersionAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageAsync(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageAsync(System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageHashAsync(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageHashAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageHashAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageHashAsync(System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageSizeAsync(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageSizeAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageSizeAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetStorageSizeAsync(System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetQueryStorageAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetQueryStorageAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetQueryStorageAtAsync(System.Collections.Generic.List{System.Byte[]},System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetQueryStorageAtAsync(System.Collections.Generic.List{System.Byte[]},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetQueryStorageAtAsync(System.Collections.Generic.List{System.Byte[]},System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeRuntimeVersionAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeRuntimeVersionAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeRuntimeVersionAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeRuntimeVersionAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeStorageAsync(Newtonsoft.Json.Linq.JArray,System.Action{System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet})">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.SubscribeStorageAsync(Newtonsoft.Json.Linq.JArray,System.Action{System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetTraceBlockAsync(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetTraceBlockAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetTraceBlockAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.GetTraceBlockAsync(System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.UnsubscribeRuntimeVersionAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.UnsubscribeRuntimeVersionAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.UnsubscribeStorageAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.State.UnsubscribeStorageAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.System">
            <summary>
            System Module
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            System Module Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.AccountNextIndexAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.AddLogFilterAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.AddReservedPeerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ChainAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ChainAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ChainTypeAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ChainTypeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.DryRunAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.DryRunAtAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.HealthAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.HealthAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.LocalListenAddressesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.LocalPeerIdAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.NameAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.NameAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.NodeRolesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.PeersAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.PropertiesAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.PropertiesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.RemoveReservedPeerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ReservedPeersAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.ResetLogFilterAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.SyncStateAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.VersionAsync">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.System.VersionAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.Modules.UnstableCalls">
            <summary>
            UnstableCalls Module
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Modules.UnstableCalls._client">
            <summary>The client</summary>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.#ctor(Substrate.NetApi.SubstrateClient)">
            <summary>
            UnstableCalls Module Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableSubmitAndWatchAsync(System.Action{System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo},System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableUnwatchAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Substrate.NetApi.Modules.UnstableCalls.TransactionUnstableUnwatchAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Substrate.NetApi.RequestGenerator">
            <summary>
            Request Generator creates a requests for storage queries or extrinsic calls.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.RequestGenerator.GetStorage(System.String,System.String,Substrate.NetApi.Model.Meta.Storage.Type,Substrate.NetApi.Model.Meta.Storage.Hasher[],Substrate.NetApi.Model.Types.IType[])">
            <summary>
            Create a request for a storage call, for generated code.
            </summary>
            <param name="type"></param>
            <param name="hashers"></param>
            <param name="module"></param>
            <param name="item"></param>
            <param name="key1Param"></param>
            <param name="key2Param"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.RequestGenerator.GetStorageKeyBytesHash(System.String,System.String)">
            <summary>
            Gets the storage key bytes hash.
            </summary>
            <param name="module">The module.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.RequestGenerator.SubmitExtrinsic(System.Boolean,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Extrinsics.Era,System.UInt32,Substrate.NetApi.Model.Extrinsics.ChargeType,Substrate.NetApi.Model.Types.Base.Hash,Substrate.NetApi.Model.Types.Base.Hash,Substrate.NetApi.Model.Rpc.RuntimeVersion)">
            <summary>
            Submits the extrinsic.
            </summary>
            <param name="signed">if set to <c>true</c> [signed].</param>
            <param name="account">The account.</param>
            <param name="method">The method.</param>
            <param name="era">The era.</param>
            <param name="nonce">The nonce.</param>
            <param name="tip">The tip.</param>
            <param name="genesis">The genesis.</param>
            <param name="startEra">The start era.</param>
            <param name="runtime">The runtime.</param>
            <returns></returns>
            <exception cref="T:Substrate.NetApi.Model.Extrinsics.UnCheckedExtrinsic">signed, account, method, era, nonce, tip, genesis, startEra</exception>
        </member>
        <member name="T:Substrate.NetApi.Sign.WrapMessage">
            <summary>
            According to Polkadot JS common util (https://github.com/polkadot-js/common/blob/master/packages/util/src/u8a/wrap.ts)
            Message to be signed might be wrapped
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.IsWrapped(System.Byte[])">
            <summary>
            Check if data is wrapped by <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.IsWrapped(System.String)">
            <summary>
            Check if data is wrapped by <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.Unwrap(System.Byte[])">
            <summary>
            Remove <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/> from given data.
            Return data unmodified if already unwrapped
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.Unwrap(System.String)">
            <summary>
            Unwrap data from <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.Wrap(System.Byte[])">
            <summary>
            Wrap data with <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/>
            Return data unmodified if already wrapped 
            </summary>
            <param name="data"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Substrate.NetApi.Sign.WrapMessage.Wrap(System.String)">
            <summary>
            Wrap data with <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_PREFIX_STR"/> and <see cref="F:Substrate.NetApi.Sign.WrapMessage.U8A_WRAP_POSTFIX_STR"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Substrate.NetApi.SubscriptionListener">
            <summary>
            Subscription Listener
            </summary>
        </member>
        <member name="F:Substrate.NetApi.SubscriptionListener.Logger">
            <summary> The logger. </summary>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.RegisterCallBackHandler``1(System.String,System.Action{System.String,``0})">
            <summary>
            Registers the call back handler.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.UnregisterHeaderHandler(System.String)">
            <summary>
            Unregisters the header handler.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.ChainAllHead(System.String,Substrate.NetApi.Model.Rpc.Header)">
            <summary>
            Chains all head.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.ChainNewHead(System.String,Substrate.NetApi.Model.Rpc.Header)">
            <summary>
            Chains the new head.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.ChainFinalizedHead(System.String,Substrate.NetApi.Model.Rpc.Header)">
            <summary>
            Chains the finalized head.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.StateRuntimeVersion(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            States the runtime version.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.StateStorage(System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet)">
            <summary>
            States the storage.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.AuthorSubmitAndWatchExtrinsic(System.String,Substrate.NetApi.Model.Rpc.ExtrinsicStatus)">
            <summary>
            Authors the submit and watch extrinsic.
            </summary>
            <param name="subscription">The subscription.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.TransactionUnstableSubmitExtrinsic(System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo)">
            <summary>
            TODO: Probablly deprecated, Authors the submit and watch extrinsic.
            </summary>
            <param name="subscription"></param>
            <param name="result"></param>
        </member>
        <member name="M:Substrate.NetApi.SubscriptionListener.TransactionUnstableWatchEventc(System.String,Substrate.NetApi.Model.Rpc.TransactionEventInfo)">
            <summary>
            Transaction unstable watch eventc.
            </summary>
            <param name="subscription"></param>
            <param name="result"></param>
        </member>
        <member name="T:Substrate.NetApi.SubstrateClient">
            <summary> A substrate client. </summary>
            <remarks> 19.09.2020. </remarks>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient.Logger">
            <summary> The logger. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._requestTokenSourceDict">
            <summary> The request token sources. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._uri">
            <summary> _URI of the resource. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._connectTokenSource">
            <summary> The connect token source. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._jsonRpc">
            <summary> The JSON RPC. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._socket">
            <summary> The socket. </summary>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._bypassRemoteCertificateValidation">
            <summary>
            Bypass Remote Certificate Validation. Useful when testing with self-signed SSL certificates. 
            </summary>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.#ctor(System.Uri,Substrate.NetApi.Model.Extrinsics.ChargeType,System.Boolean)">
            <summary>
            Substrate client
            </summary>
            <param name="uri">Uri of the node</param>
            <param name="chargeType">Charge type</param>
            <param name="bypassRemoteCertificateValidation">By default, the client will validate the SSL certificate of the node. Set this to true to bypass this validation.</param>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.MetaData">
            <summary> Gets or sets information describing the meta. </summary>
            <value> Information describing the meta. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.RuntimeVersion">
            <summary> Gets or sets information describing the runtime version. </summary>
            <value> Information describing the runtime version. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.GenesisHash">
            <summary> Gets or sets the genesis hash. </summary>
            <value> The genesis hash. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.System">
            <summary> Gets the system. </summary>
            <value> The system. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.Chain">
            <summary> Gets the chain. </summary>
            <value> The chain. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.Payment">
            <summary> Gets the payment. </summary>
            <value> The payment. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.State">
            <summary> Gets the state. </summary>
            <value> The state. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.Author">
            <summary> Gets the author. </summary>
            <value> The author. </value>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.Unstable">
            <summary>
            New Api 2
            </summary>
        </member>
        <member name="P:Substrate.NetApi.SubstrateClient.IsConnected">
            <summary> Gets a value indicating whether this object is connected. </summary>
            <value> True if this object is connected, false if not. </value>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.SetJsonRPCTraceLevel(System.Diagnostics.SourceLevels)">
            <summary>
            Sets the JSON-RPC logging level.
            </summary>
            <param name="sourceLevels"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.ConnectAsync">
            <summary> Connects an asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> An asynchronous result. </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.ConnectAsync(System.Threading.CancellationToken)">
            <summary> Connects an asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> An asynchronous result. </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.ConnectAsync(System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary> Connects an asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="token"> A token that allows processing to be cancelled. </param>
            <returns> An asynchronous result. </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetStorageAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the storage asynchronous for generated code.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetStorageAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the storage asynchronous from a blockhash for generated code.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="blockhash"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.SubscribeStorageKeyAsync(System.String,System.Action{System.String,Substrate.NetApi.Model.Rpc.StorageChangeSet},System.Threading.CancellationToken)">
            <summary>
            Subscribe to storage changes
            </summary>
            <param name="storageParams"></param>
            <param name="callback"></param>
            <param name="token"></param>
            <returns></returns>
            <exception cref="T:Substrate.NetApi.Exceptions.ClientNotConnectedException"></exception>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetMethodAsync``1(System.String)">
            <summary>
            Get method
            </summary>
            <typeparam name="T"></typeparam>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetMethodAsync``1(System.String,System.Threading.CancellationToken)">
            <summary> Gets method asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="method"> The method. </param>
            <param name="token">  A token that allows processing to be cancelled. </param>
            <returns> The method async&lt; t&gt; </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetMethodAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets method asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="method">    The method. </param>
            <param name="parameter"> The parameter. </param>
            <param name="token">     A token that allows processing to be cancelled. </param>
            <returns> The method async&lt; t&gt; </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.GetExtrinsicParametersAsync(Substrate.NetApi.Model.Extrinsics.Method,Substrate.NetApi.Model.Types.Account,Substrate.NetApi.Model.Extrinsics.ChargeType,System.UInt32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get extrinsic parameters
            </summary>
            <param name="method"></param>
            <param name="account"></param>
            <param name="charge"></param>
            <param name="lifeTime"></param>
            <param name="signed"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.InvokeAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
                Executes the asynchronous on a different thread, and waits for the result.
            </summary>
            <remarks> 19.09.2020. </remarks>
            <exception cref="T:Substrate.NetApi.Exceptions.ClientNotConnectedException">
                Thrown when a Client Not Connected error
                condition occurs.
            </exception>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="method">     The method. </param>
            <param name="parameters"> Options for controlling the operation. </param>
            <param name="token">      A token that allows processing to be cancelled. </param>
            <returns> A T. </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.CloseAsync">
            <summary> Closes an asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <returns> An asynchronous result. </returns>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.CloseAsync(System.Threading.CancellationToken)">
            <summary> Closes an asynchronous. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="token"> A token that allows processing to be cancelled. </param>
            <returns> An asynchronous result. </returns>
        </member>
        <member name="F:Substrate.NetApi.SubstrateClient._disposedValue">
            <summary> To detect redundant calls. </summary>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.Dispose(System.Boolean)">
            <summary> This code added to correctly implement the disposable pattern. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="disposing">
                True to release both managed and unmanaged resources; false to
                release only unmanaged resources.
            </param>
        </member>
        <member name="M:Substrate.NetApi.SubstrateClient.Dispose">
            <summary> This code added to correctly implement the disposable pattern. </summary>
            <remarks> 19.09.2020. </remarks>
        </member>
        <member name="T:Substrate.NetApi.TypeConverters.ExtrinsicJsonConverter">
            <summary>
            Extrinsic Json Converter
            </summary>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.ExtrinsicJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Substrate.NetApi.Model.Extrinsics.Extrinsic,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read. If there is no existing value then <c>null</c> will be used.</param>
            <param name="hasExistingValue">The existing value has a value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.ExtrinsicJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,Substrate.NetApi.Model.Extrinsics.Extrinsic,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Substrate.NetApi.TypeConverters.TransactionEventJsonConverter">
            <summary>
            TransactionEventInfo JsonConverter
            </summary>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.TransactionEventJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Substrate.NetApi.Model.Rpc.TransactionEventInfo,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read. If there is no existing value then <c>null</c> will be used.</param>
            <param name="hasExistingValue">The existing value has a value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
            <exception cref="T:System.NotImplementedException">
            Unimplemented {reader.TokenType} of type '{reader.ValueType}' and value '{reader.Value}'.
            or
            Unimplemented {reader.TokenType} of type '{reader.ValueType}' and value '{reader.Value}'.
            </exception>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.TransactionEventJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,Substrate.NetApi.Model.Rpc.TransactionEventInfo,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Substrate.NetApi.TypeConverters.ExtrinsicStatusJsonConverter">
            <summary>
            ExtrinsicStatus JsonConverter
            </summary>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.ExtrinsicStatusJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Substrate.NetApi.Model.Rpc.ExtrinsicStatus,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read. If there is no existing value then <c>null</c> will be used.</param>
            <param name="hasExistingValue">The existing value has a value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
            <exception cref="T:System.NotImplementedException">
            Unimplemented {reader.TokenType} of type '{reader.ValueType}' and value '{reader.Value}'.
            or
            Unimplemented {reader.TokenType} of type '{reader.ValueType}' and value '{reader.Value}'.
            </exception>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.ExtrinsicStatusJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,Substrate.NetApi.Model.Rpc.ExtrinsicStatus,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Substrate.NetApi.TypeConverters.GenericTypeConverter`1.TypeName">
            <summary>Gets the name of the type.</summary>
            <value>The name of the type.</value>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.GenericTypeConverter`1.Create(System.String)">
            <summary>Creates a new object.</summary>
            <param name="value">The value.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.GenericTypeConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read. If there is no existing value then <c>null</c> will be used.</param>
            <param name="hasExistingValue">The existing value has a value.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Substrate.NetApi.TypeConverters.GenericTypeConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Substrate.NetApi.Utils">
            <summary> An utilities. </summary>
            <remarks> 19.09.2020. </remarks>
        </member>
        <member name="T:Substrate.NetApi.Utils.HexStringFormat">
            <summary>
            Different representations of a hex string.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Utils.HexStringFormat.Pure">
            <summary>
            Pure hex string without any separators.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Utils.HexStringFormat.Dash">
            <summary>
            Hex string with dash separators.
            </summary>
        </member>
        <member name="F:Substrate.NetApi.Utils.HexStringFormat.Prefixed">
            <summary>
            Hex string with 0x prefix.
            </summary>
        </member>
        <member name="M:Substrate.NetApi.Utils.Bytes2HexString(System.Byte[],Substrate.NetApi.Utils.HexStringFormat)">
            <summary>
            Convert bytes to the hexadecimal string.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="format">The format.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Unimplemented hex string format '{format}'</exception>
        </member>
        <member name="M:Substrate.NetApi.Utils.StringValueArrayBytesArray(System.String)">
            <summary>
            Strings the value array bytes array.
            </summary>
            <param name="valueArray">The value array.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Not valid string array for byte array conversion. Format should be [ 0-255, 0-255, ...]</exception>
        </member>
        <member name="M:Substrate.NetApi.Utils.HexToByteArray(System.String,System.Boolean)">
            <summary>
            Converts hexadecimal string to byte array.
            </summary>
            <param name="hex">The hexadecimal.</param>
            <param name="evenLeftZeroPad">if set to <c>true</c> [even left zero pad].</param>
            <returns></returns>
            <exception cref="T:System.Exception">The binary key cannot have an odd number of digits</exception>
        </member>
        <member name="M:Substrate.NetApi.Utils.Bytes2Value(System.Byte[],System.Boolean)">
            <summary>
            Converts bytes to value.
            </summary>
            <param name="value">The value.</param>
            <param name="littleEndian">if set to <c>true</c> [little endian].</param>
            <returns></returns>
            <exception cref="T:System.Exception">Unhandled byte size {value.Length} for this method!</exception>
        </member>
        <member name="M:Substrate.NetApi.Utils.SizePrefixedByteArray(System.Collections.Generic.List{System.Byte})">
            <summary> Size prefixed byte array. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="list"> The list. </param>
            <returns> A byte[]. </returns>
        </member>
        <member name="M:Substrate.NetApi.Utils.Value2Bytes(System.Object,System.Boolean)">
            <summary> Value 2 bytes. </summary>
            <remarks> 19.09.2020. </remarks>
            <exception cref="T:System.Exception"> Thrown when an exception error condition occurs. </exception>
            <param name="value">The value.</param>
            <param name="littleEndian">(Optional) True to little endian. </param>
            <returns> A byte[]. </returns>
        </member>
        <member name="M:Substrate.NetApi.Utils.GetHexVal(System.Char)">
            <summary> Gets hexadecimal value. </summary>
            <remarks> 19.09.2020. </remarks>
            <param name="hex"> The hexadecimal. </param>
            <returns> The hexadecimal value. </returns>
        </member>
        <member name="M:Substrate.NetApi.Utils.GetPublicKeyFrom(System.String)">
            <summary>
            Gets the public key from.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">
            Address checksum is wrong.
            </exception>
        </member>
        <member name="M:Substrate.NetApi.Utils.GetPublicKeyFrom(System.String,System.Int16@)">
            <summary>
            Gets the public key and network from.
            </summary>
            <param name="address"></param>
            <param name="network"></param>
            <returns></returns>
        </member>
        <member name="M:Substrate.NetApi.Utils.GetAddressFrom(System.Byte[],System.Int16)">
            <summary>
            Gets the address from.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
    </members>
</doc>
